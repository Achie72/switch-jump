pico-8 cartridge // http://www.pico-8.com
version 18
__lua__

player = {
	x = 0,
	y = 0,
	ax = 0,
	ay = 1,
	speed = 1,
	maxSpeed = 2.5,
	maxFall = 3,
	spr = 3,
	badSpr = 16,
	goodSpr = 32,
	jumpPower = 3,
	isGrounded = false,
	isFalling = false,
	isBoosted = false,
	isHoldingKey = false
}
global = {
	gravity = 0.25,
	mode = 0,
	state = 0, --0 menu, 1 game
	level = 5,
	cameraMoving = false,
	levelStartPosX,
	levelStartPosY,
	levelKeyPosX,
	levelKeyPosY,
	isKeyOnMap = false,
	isKeyWallOnMap = false,
	keywalls = {}
}
crect = {
	x,
	y
}

door = {}
key = {}
particles = {}
enemies = {}
cam = {}
bouncers = {}
boosters = {}
keywalls = {}

mapMatrix ={
	"68,72,72,72,72,72,72,72,72,72,72,72,72,72,72,71,76,0,0,0,0,49,54,0,0,0,0,0,0,0,16,76,76,0,75,0,0,0,76,0,0,0,0,0,0,0,97,76,76,0,79,0,0,0,77,0,0,0,0,0,0,97,0,76,76,0,79,0,12,0,0,0,0,0,0,0,97,0,0,76,76,0,79,0,12,0,44,0,0,0,0,0,79,65,65,67,76,0,79,0,12,0,44,0,0,0,0,0,79,0,0,67,76,0,79,0,12,0,44,0,0,0,0,0,79,66,66,67,76,0,79,0,0,0,0,0,0,0,0,0,0,44,10,76,76,0,79,0,0,0,78,0,0,0,0,0,0,44,10,76,76,0,79,0,0,0,78,0,0,0,0,0,0,44,10,76,76,0,69,71,0,0,78,0,0,0,0,0,0,44,10,76,76,0,0,76,0,0,78,0,0,0,0,0,0,44,10,76,76,0,98,76,0,0,73,72,72,74,0,0,68,65,65,67,76,0,0,76,0,0,97,0,96,0,97,0,64,0,0,67,69,72,72,72,72,72,72,72,72,72,72,72,66,66,66,70,"
	,"68,72,72,72,72,72,72,72,65,72,72,72,72,72,72,71,76,0,0,0,12,0,0,50,52,0,0,96,0,97,16,76,76,0,73,72,65,72,74,0,76,0,0,0,0,0,0,76,76,0,0,0,79,0,0,0,76,96,96,75,0,0,0,76,76,0,0,0,79,0,0,68,70,0,0,76,0,0,0,76,76,0,0,0,79,0,0,76,0,0,0,76,99,99,99,76,76,0,0,0,79,0,160,76,0,140,0,76,0,0,0,76,76,0,0,10,79,0,0,76,0,0,0,76,0,0,68,67,76,0,0,0,79,0,0,69,72,72,72,67,0,0,64,67,76,0,0,0,79,0,0,97,0,96,0,76,0,0,64,67,76,0,0,0,79,0,0,97,0,96,0,76,0,0,69,67,76,0,0,0,69,72,72,65,65,71,0,76,0,0,0,76,76,0,0,0,97,0,0,64,0,67,0,76,0,0,0,76,76,0,0,0,97,0,98,64,0,67,0,77,0,0,128,76,76,0,0,0,97,0,0,64,0,67,0,97,0,0,49,54,69,72,72,72,72,72,72,66,66,66,72,72,72,72,72,70,"
	," 68,65,65,72,72,72,72,72,72,65,65,65,65,72,72,71,64,0,67,0,0,97,0,0,49,54,0,0,67,0,0,76,64,0,67,0,0,79,72,72,0,64,0,0,67,0,98,76,64,66,70,0,0,79,0,0,0,64,0,0,67,0,0,76,76,0,0,0,160,79,0,0,0,69,66,66,70,99,99,76,76,0,0,0,0,79,0,0,0,0,0,0,0,0,0,76,76,0,0,0,0,79,0,0,0,12,0,0,0,0,16,76,64,71,0,0,0,0,0,0,0,12,0,0,0,0,0,76,64,67,0,0,0,0,0,0,0,12,78,65,71,0,68,67,64,67,0,0,0,0,0,0,0,0,78,0,67,12,64,67,64,67,0,0,0,0,0,0,0,78,0,0,67,0,69,67,64,67,0,0,0,0,0,0,0,78,0,0,67,0,0,76,64,66,74,12,12,12,0,0,128,78,0,0,67,0,0,76,76,0,0,0,0,0,75,0,0,78,72,72,72,72,0,76,76,0,172,0,0,49,54,0,0,97,0,0,0,0,50,54,69,72,72,72,72,72,72,72,72,72,72,72,72,72,72,70,"
	,"68,72,72,72,72,72,72,72,72,72,72,72,72,72,72,71,76,140,0,99,0,0,0,44,0,0,99,0,0,0,97,76,76,44,0,75,72,72,72,72,72,72,74,0,75,0,16,76,76,0,0,76,44,97,0,0,97,49,54,0,79,0,0,76,76,0,128,64,72,72,74,0,76,0,78,0,79,0,0,76,76,0,0,76,0,0,0,97,76,0,78,0,79,0,128,76,76,0,0,77,44,73,72,72,67,0,78,0,79,0,0,76,76,0,0,96,0,0,0,49,54,10,78,0,79,0,68,67,64,72,72,65,72,72,72,72,67,0,78,11,79,44,64,67,76,0,98,76,0,0,0,160,76,0,78,0,79,0,69,67,76,0,0,76,0,0,76,0,76,0,76,0,79,0,0,76,76,0,0,76,0,0,76,0,76,0,76,0,79,0,128,76,76,0,0,77,0,128,76,99,76,0,0,0,76,0,0,76,76,0,0,0,0,0,76,0,69,72,72,72,70,0,0,76,76,0,0,0,0,97,78,0,0,0,0,0,0,0,50,52,69,72,72,72,72,72,72,72,72,72,72,72,72,72,72,70,"
	,"68,72,72,72,72,72,72,72,72,72,72,72,72,72,72,71,76,0,0,96,0,97,0,96,0,10,78,67,0,0,0,76,76,0,0,0,0,0,0,0,0,11,78,67,0,0,16,76,76,12,12,12,75,0,0,0,0,0,78,67,0,0,0,76,76,0,0,0,76,0,0,0,97,0,78,67,0,0,0,76,76,0,0,68,70,0,0,0,0,0,78,67,0,0,0,76,76,0,0,76,0,0,0,0,0,0,78,67,0,0,0,76,76,0,160,76,0,0,0,0,0,0,78,0,71,0,68,67,76,0,0,77,0,78,65,71,0,0,78,0,67,128,64,67,76,0,0,0,0,78,0,67,0,0,78,0,70,0,69,67,76,0,0,97,0,78,0,67,0,0,78,67,0,0,0,79,76,0,0,0,0,78,0,70,0,0,78,67,0,0,0,79,76,0,0,96,0,78,67,0,0,68,65,67,0,0,11,79,76,0,0,0,0,78,67,0,160,69,66,70,0,0,0,79,76,0,98,97,0,78,67,0,0,96,0,0,0,0,50,54,69,72,72,72,72,72,72,72,72,72,72,72,72,72,72,70,"
	," 68,72,72,65,72,72,72,72,72,72,72,72,65,72,72,71,76,0,0,76,12,44,0,0,0,0,0,11,79,0,98,76,76,0,16,76,44,12,0,0,49,54,0,0,79,0,0,76,76,0,0,76,12,44,0,0,0,78,0,0,79,0,0,76,76,0,0,69,72,74,0,0,0,78,0,0,79,0,0,76,76,0,0,96,97,99,0,0,0,78,0,0,79,0,128,76,76,0,0,96,0,99,0,0,0,78,0,0,79,0,0,76,76,0,0,96,0,99,0,0,0,79,0,0,79,0,68,67,76,0,0,96,97,99,0,0,0,79,0,0,79,0,69,67,76,0,0,68,72,74,0,0,0,79,0,10,79,0,0,76,76,0,0,76,12,44,0,0,0,79,0,0,0,0,0,76,76,0,0,76,44,12,0,0,49,54,72,72,74,0,0,76,76,0,0,76,12,44,0,0,0,0,0,0,0,0,51,54,76,0,0,69,72,72,72,72,72,72,72,72,72,72,72,67,76,0,0,12,0,0,0,0,44,0,0,0,172,0,51,54,69,72,72,72,72,72,72,72,72,72,72,72,72,72,72,70,"
}



-- 96 red wall, 97 white wall, 101 bouncer,78 left booster, 79 right booster
wallIdList = {64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,115,101}
-- 12 - red enemy, 44 white, 26 red spike, 11 white spike
enemyIdList = {4,10,11,12,44,128,160,140,172}
bouncerIdList = {48,49,50,51,52,53,54}

function _init()
	add_enemy(10,8,1)
	add_enemy(2,8,0)
end

function parseMap(_mapString)
	local mapString = _mapString
	local actualMap = {}
	while #mapString > 0 do	
		local firstToken=sub(mapString,1,1)
		local cut = 2
		if (firstToken!=",") then
			local workString = sub(mapString,2)
			local secondToken = sub(workString,1,1)
			if (secondToken!=",") then
				local workString = sub(mapString,3)
				local thirdToken = sub(workString,1,1)
				if (thirdToken!=",") then
					local actualToken = firstToken..secondToken..thirdToken
					add(actualMap,actualToken)
					cut = 4
				else
					local actualToken = firstToken..secondToken
					add(actualMap,actualToken)
					cut = 3
				end
			else
				add(actualMap,firstToken)
				cut = 2
			end
		end
		mapString=sub(mapString,cut)
	end
	return actualMap
end

function load_map(_index)
	mapString = parseMap(mapMatrix[_index])
	x = 0
	y = 0
	global.isKeyOnMap = false
	global.isKeyWallOnMap = false
	global.keywalls = {}
	for id in all(mapString) do
		
		id = tonum(id)
		for wallID in all(wallIdList) do
			if id == wallID then
				mset(y,x,id)
				if id == 99 then
					keywall = {}
					keywall.x = y
					keywall.y = x
					add(keywalls,keywall)
					add(global.keywalls,keywall)
					global.isKeyWallOnMap = true
				end
			end		
		end

		for enemId in all(enemyIdList) do
			if id == enemId then
				if (id == 12) then -- red ghost
					printh("sanyala")
					add_enemy(y,x,0)
				elseif (id == 44) then -- white ghost
 					add_enemy(y,x,1)
				elseif (id == 10) then --red spike
					add_enemy(y,x,2)
				elseif (id == 11) then --white spike
					add_enemy(y,x,3)
				elseif id == 160 then
					add_enemy(y,x,5)
				elseif id == 128 then
					add_enemy(y,x,4)
				elseif id == 140 then
					add_enemy(y,x,6)
					key.x = y
					key.y = x
					global.levelKeyPosX = y
					global.levelKeyPosY = x
					global.isKeyOnMap = true
				elseif id == 172 then
					add_enemy(y,x,7)
					key.x = y
					key.y = x
					global.levelKeyPosX = y
					global.levelKeyPosY = x
					global.isKeyOnMap = true
				end
			end	
		end

		for bouncerId in all(bouncerIdList) do
			if id == bouncerId then
				if (bouncerId == 48) then add_bouncer(y,x,4) end
				if (bouncerId == 49) then add_bouncer(y,x,6) end
				if (bouncerId == 50) then add_bouncer(y,x,8) end
				if (bouncerId == 51) then add_bouncer(y,x,10) end
				if (bouncerId == 52) then 
					mset(y,x,101)
					mset(y,x-1,96)
				end
				if (bouncerId == 53) then  
					mset(y,x,101)
					mset(y,x-1,97)
				end
				if (bouncerId == 54) then
					mset(y,x,101)
				end
			end

		end

		if (id == 78) then
			add_booster(y,x-1,3,0)
		elseif (id == 79) then
			add_booster(y,x-1,3,1)
		elseif (id == 16) then
			player.x = y*8
			player.y = x*8
		elseif (id == 98) then
			door.x = y*8
			door.y = x*8
		end


		x += 1
		if (x > 15) then
			x = 0
			y +=1
		end
	end

	global.mode = 0
	global.levelStartPosX = player.x
	global.levelStartPosY = player.y

end

function build_walls(_mapString)
	for id in all(actualMap) do
		mset(y,x,id)
		x += 1
		if (x > 15) then
			x = 0
			y +=1
		end
	end
end

function check_door()
	if collide_rect(to_rect(door,7,7),to_rect(player,7,7)) then
		unload_level()
		global.level += 1
		load_level()
	end
end

function unload_level()
	for x=0,15 do
		for y=0,15 do
			mset(x,y,0)
		end
	end
	door = {}
	key = {}
	particles = {}
	enemies = {}
	bouncers = {}
	boosters = {}
	keywalls = {}
	global.levelKeyPosX = 0
	global.levelKeyPosY = 0
	global.keywalls = {}
	player.isHoldingKey = false
	player.ax = 0
	player.ay = 0
end

function load_level()
	load_map(global.level)
end

function reload_level()
	player.isHoldingKey = false
	keywalls = {}
	player.x = global.levelStartPosX
	player.y = global.levelStartPosY
	if global.isKeyWallOnMap then
		for keywall in all(global.keywalls) do
			mset(keywall.x,keywall.y,99+(global.mode*16))
		end
	end
end

function animate(object,starterFrame,frameCount,animSpeed,flipped)
	if(not object.tickCount) object.tickCount=0
	if(not object.spriteOffset)object.spriteOffset=0

	object.tickCount+=1

	if(object.tickCount%(30/animSpeed)==0) then
		object.spriteOffset+=1
		if(object.spriteOffset==frameCount) object.spriteOffset=0
	end

	object.actualframe=starterFrame+object.spriteOffset
	spr(object.actualframe,flr(object.x),flr(object.y),1,1,flipped)
end



function add_particle(_x,_y,_maxAge,_color,_type)
	local particle = {
		x = _x,
		y = _y,
		lifetime = 0,
		maxage = _maxAge,
		color_range = _color,
		clr = _color[1],
		tpe = _type
	}
	add(particles,particle)
end


function add_enemy(_x,_y, _tpe)
	local enemy = {
		x = _x*8,
		y = _y*8,
		spr = 0,
		goodSpr = 0,
		badSpr = 0,
		tpe = _tpe
	}
	--[[
	0 - red ghost
	1 - white ghost
	2 - red spike
	3 - white spike
	4 - red walker
	5 - white walker

	]]--

	if _tpe == 0 then
		enemy.goodSpr = 28
		enemy.badSpr = 12
	elseif _tpe == 1 then
		enemy.goodSpr = 60
		enemy.badSpr = 44
	elseif _tpe == 2 then
		enemy.goodSpr = 26
		enemy.badSpr = 10
	elseif _tpe == 3 then
		enemy.goodSpr = 27
		enemy.badSpr = 11
	elseif _tpe == 4 then
		enemy.goodSpr = 144
		enemy.badSpr = 128
		enemy.speed = 0.5
		enemy.direction = 1
	elseif _tpe == 5 then
		enemy.goodSpr = 176
		enemy.badSpr = 160
		enemy.speed = 0.5		
		enemy.direction = 1
	elseif _tpe == 6 then
		enemy.badSpr = 140
		enemy.goodSpr = 156
	elseif _tpe == 7 then
		enemy.badSpr = 172
		enemy.goodSpr = 188
	end

	add(enemies,enemy)
end

function add_bouncer(_x,_y,_force)
	local bouncer = {
		x = _x*8,
		y = _y*8,
		force = _force
	}
	add(bouncers,bouncer)
end

function add_booster(_x,_y,_force,_type)
	local booster = {
		x = _x*8,
		y = _y*8,
		force = _force,
		tpe = _type
	}
	add(boosters,booster)
end


function collide_map(obj,width,heigth,dir,flag)
	local x = obj.x
	local y = obj.y
	local w = width
	local h = heigth

	local x1 = 0
	local x2 = 0
	local y1 = 0
	local y2 = 0

	if dir==0 then --left
	   x1=x-1  y1=y+1
	   x2=x    y2=y+h-1

	elseif dir==1 then --rigth
	   x1=x+w    y1=y+1
	   x2=x+w  y2=y+h-1

	elseif dir==2 then --up
		x1=x+1    y1=y-1
		x2=x+w-2  y2=y

	elseif dir==3 then --down
		x1=x+1    y1=y+h
		x2=x+w-2    y2=y+h
	end


	crect.x1 = x1
	crect.x2 = x2
	crect.y1 = y1
	crect.y2 = y2

	x1/=8
	x2/=8
	y1/=8
	y2/=8

	if fget(mget(x1,y1), flag)
	or fget(mget(x1,y2), flag)
	or fget(mget(x2,y1), flag)
	or fget(mget(x2,y2), flag) then
	    return true
	else
	    return false
	end
end

function to_rect(obj,w,h)
	local rect = {}
	rect.x1 = obj.x
	rect.x2 = obj.x + w -1
	rect.y1 = obj.y
	rect.y2 = obj.y + h -1
	return rect
end

function collide_rect(rect1,rect2)
	if ((rect1.x1 > rect2.x2) or
		(rect2.x1 > rect1.x2) or
		(rect1.y1 > rect2.y2) or
		(rect2.y1 > rect1.y2)) then
		return false
	end
	return true
end

function enemy_collison()
	for enemy in all(enemies) do
		if (global.mode == 0) and ((enemy.tpe == 0) or (enemy.tpe == 2) or (enemy.tpe == 4) or (enemy.tpe == 6)) then

			if collide_rect(to_rect(enemy,7,7),to_rect(player,7,7)) then
				if enemy.tpe == 6 then
					player.isHoldingKey = true
					update_map()
				else
					reload_level()
				end
			end
		end
		if (global.mode == 1) and((enemy.tpe == 1) or (enemy.tpe == 3)  or (enemy.tpe == 5) or (enemy.tpe == 7)) then
			if collide_rect(to_rect(enemy,7,7),to_rect(player,7,7)) then
				if enemy.tpe == 7 then
					player.isHoldingKey = true
					update_map()
				else
					reload_level()
				end
			end
		end
	end
end


function control_player()
	if global.mode == 0 then
		player.spr = player.badSpr
	elseif global.mode == 1 then
		player.spr = player.goodSpr
	end
	
	if not player.isBoosted then
		player.ax = 0
	end
	-- movement code
	if (btn(0)) then
	 	player.ax -= player.speed
	end
	if (btn(1)) then 
		player.ax += player.speed
	end
	if btnp(4) and (player.isGrounded) then
		printh(player.isBoosted)
		player.ay -= player.jumpPower
	end
	if btnp(5) then
		if global.mode == 1 then
			global.mode = 0
		elseif global.mode == 0 then
			global.mode = 1
		end
		update_map()
		player.ay -= 0.1
	end

	-- look direction
	if player.ax > 0 then
		--player.ax -= player.friction
		player.flip = false
		if player.ax < 0 then
			player.ax = 0
		end
	elseif player.ax < 0 then
		player.flip = true
		--player.ax += player.friction
		if player.ax > 0 then
			player.ax = 0
		end
	end

	if player.isBoosted then
		if player.flip then
			add_particle(player.x+7,player.y+1,5,{2+(global.mode*4),5},3)
			add_particle(player.x+7,player.y+3,5,{2+(global.mode*4),5},3)
			add_particle(player.x+7,player.y+5,5,{2+(global.mode*4),5},3)
		else
			add_particle(player.x,player.y+1,5,{2+(global.mode*4),5},3)
			add_particle(player.x,player.y+3,5,{2+(global.mode*4),5},3)
			add_particle(player.x,player.y+5,5,{2+(global.mode*4),5},3)	
		end
	end


	-- check horizontal collision
	if player.ax < 0 then
		if (rnd(10) < 3) then
			add_particle(player.x+9,player.y+7,5,{2+(global.mode*4),5},0)
		end
		if collide_map(player,8,8,0,0) then
			player.ax = 0
		end
	elseif player.ax > 0 then
		if (rnd(10) < 3) then
			add_particle(player.x-1,player.y+7,5,{2+(global.mode*4),5},1)
		end
		if collide_map(player,8,8,1,0) then
			player.ax = 0
		end
	end

	if collide_map(player,8,8,3,0) and (not collide_map(player,8,8,3,7) ) then
			player.isBoosted = false
		end

	--check vertical collision
	if player.ay > 0 then
		player.isGrounded = false
		--player.spr = player.jump_spr
		if collide_map(player,8,8,3,0) then
			player.isGrounded = true
			player.isBoosted = false
			--player.spr = player.walk_spr
			player.ay = 0
			player.y-=(player.y+8)%8
			
		end
	elseif player.ay < 0 then
		--player.spr = player.jump_spr
		player.isGrounded = false
		if collide_map(player,8,8,2,0) then
			player.ay = 0
		end
	elseif (not collide_map(player,8,8,3,0)) then
		player.ay -= 0.1
	end

	-- noramile vertical speed
	if player.flip then
		if player.ax < - player.maxSpeed then
			player.ax = -player.maxSpeed
		end
	else
		if player.ax > player.maxSpeed then
			player.ax = player.maxSpeed
		end
	end

	--normalize vertical speed
	if not (player.isGrounded) then
			player.ay += global.gravity
		if player.ay > player.maxFall then
			player.ay = player.maxFall
		end
	end


	player.x += player.ax
	player.y += player.ay

end

function _update()
	if global.state == 0 then
		update_menu()
	elseif global.state == 1 then
		update_game()
	elseif global.state == 2 then
		update_endscreen()
	end
end

function update_menu()
	camera(0,0)
	if btnp(4) then
		unload_level()
		global.state = 1
		global.level = 5
		load_map(6)
	end
	update_enemies()
end

function update_endscreen()
	camera(0,0)
	if btnp(4) then
		_init()
		global.state = 0
	end
end

function update_game()
	if not global.cameraMoving then
		control_player()
		update_particles()
		update_enemies()
		check_door()
		enemy_collison()
		update_bouncers()
		update_boosters()
	else
		camera_transition()
	end
end

function update_enemies()
	for enemy in all(enemies) do
		if global.mode  == 0 then
			enemy.spr = enemy.badSpr
			if enemy.tpe == 4 then
				move_enemy(enemy)
			end
		elseif global.mode == 1 then
			enemy.spr = enemy.goodSpr
			if enemy.tpe == 5 then
				move_enemy(enemy)
			end
		end
	end
end

function move_enemy(enemy)
	nextWall = 0
	nextFloor = 0
	actualFloor = 0
	-- type 0

	actualFloor = mget(ceil(enemy.x/8),enemy.y/8+1)
	if (fget(actualFloor) == 0) then
		enemy.y += global.gravity
	else
		if enemy.speed > 0 then
			nextFloor = mget(enemy.x/8+(1*sgn(enemy.speed)),enemy.y/8+1)
		end

		if enemy.speed < 0 then
			nextFloor = mget(ceil(enemy.x/8)+(1*sgn(enemy.speed)),enemy.y/8+1)
		end

		if(fget(nextFloor) == 0) then
			enemy.speed = enemy.speed * (-1)
		end

		

		if enemy.speed > 0 then
			nextWall = mget(enemy.x/8+(1*sgn(enemy.speed)),enemy.y/8)
		end

		if enemy.speed < 0 then
			nextWall = mget(ceil(enemy.x/8)+(1*sgn(enemy.speed)),enemy.y/8)
		end

		if enemy.speed > 0 then
			enemy.direction = 0
		elseif enemy.speed < 0 then
			enemy.direction = 1
		end

		if(fget(nextWall)==1) then
			enemy.speed = enemy.speed * (-1)
		end

	enemy.x += enemy.speed
	end

end


function update_map()
	for x=0,15 do
		for y=0,15 do
			tpe = mget(x,y)
			-- iterate for tiles
			for index=64,79 do
				if (tpe == index) or (tpe == index+16) then
					mset(x,y,index+(global.mode * 16))
				end
			end
			-- iterate interactibles
			for index2=96,111 do
				if (tpe == index2) or (tpe == index2+16) then
					mset(x,y,index2+(global.mode * 16))
				end
			end
			if ((tpe == 99) or (tpe == 115)) and (player.isHoldingKey) then
				mset(x,y,0)
			end
		end
	end
end

function update_particles()
	for particle in all(particles) do
		if particle.lifetime > particle.maxage then
			del(particles,particle)
		else
			if #particle.color_range == 1 then
				particle.clr = particle.color_range[1]
			else
				local idx = particle.lifetime / particle.maxage
				idx = 1 + flr(idx*#particle.color_range)
				particle.clr = particle.color_range[idx] 
			end
		end
		if particle.tpe == 0 then
			particle.x = particle.x - 0.2
			particle.y = particle.y
		elseif particle.tpe == 1 then
			particle.x = particle.x + 0.2
		elseif particle.tpe == 2 then
			particle.y -= 0.3
			particle.x += sin(rnd())/2
		end
		particle.lifetime +=1
	end
end

function update_bouncers()
	for bouncer in all(bouncers) do
		if not (fget(mget(bouncer.x/8,(bouncer.y/8)),0)) then
			if (time()%0.2 > 0.04) then
				add_particle(bouncer.x+4,bouncer.y+7,10+(bouncer.force/0.2),{2+(global.mode*4),5},2)
			end
			if collide_rect(to_rect(bouncer,7,7),to_rect(player,7,7)) then
				if player.isGrounded then
					player.ay -= bouncer.force
				end
			end
		end
	end
end

function update_boosters()
	for booster in all(boosters) do
		if collide_rect(to_rect(booster,7,7),to_rect(player,7,7)) then
			player.isBoosted = true
			if booster.tpe == 0 then
				player.ax -= booster.force
				if (rnd(1) < 0.9) then
					add_particle(player.x+7,player.y+1,5,{2+(global.mode*4),5},3)
					add_particle(player.x+7,player.y+3,5,{2+(global.mode*4),5},3)
					add_particle(player.x+7,player.y+5,5,{2+(global.mode*4),5},3)
				end
			else
				if (rnd(1) < 0.9) then
					add_particle(player.x,player.y+1,5,{2+(global.mode*4),5},3)
					add_particle(player.x,player.y+3,5,{2+(global.mode*4),5},3)
					add_particle(player.x,player.y+5,5,{2+(global.mode*4),5},3)
				end
				player.ax += booster.force
			end
		end
	end
end


function _draw()
	if global.state == 0 then
		draw_menu()
	elseif global.state == 1 then
		draw_game()
	elseif global.state == 2 then
		draw_endscreen()
	end
end

function draw_menu()
	cls()
	print("sWITCH", 44,20,2)
	print("jUMP", 72,20,6)
	print("#fullmoongamejam2020",26,28,1)

	--text
	print("press c / \142 to start",24,102,1)
	print("c - switch".." - ".."x - jump",26,110,1)
	print("by: bela toth - achie72",22,118,1)
	draw_enemies()
	for i=4,10 do
		spr(76,i*8,80,1,1,false)
	end
	spr(75,28,80)
	spr(77,88,80)
	spr(16,52,72)
	spr(73,64,72)
end

function draw_endscreen()
	cls()
	print("sWITCH", 44,20,2)
	print("jUMP", 72,20,6)
	print("#fullmoongamejam2020",26,28,1)
	if (time()%0.2 > 0.01) then
		print("yOU wON!",50,36,6)
	end
	print("press c / \142 for menu",24,102,1)
	print("more levels coming soon",24,110,1)
end

function draw_game()
	cls()
	map()
	draw_player()
	draw_part()
	draw_enemies()
	--print(player.ay)
	--rect(crect.x1,crect.y1,crect.x2,crect.y2,7)
end

function draw_player()
	rectfill(player.x,player.y,player.x+7,player.y+7,0)
	if not (player.ax == 0) then
		if player.isBoosted then
			animate(player,player.spr,2,20,player.flip)
		else
			animate(player,player.spr,2,12,player.flip)
		end
	else
		spr(player.spr,player.x,player.y,1,1,player.flip)
	end
end

function draw_part()
	for particle in all(particles) do
	 	pset(particle.x,particle.y,particle.clr)
	end
end

function draw_enemies()
	for enemy in all(enemies) do
		if enemy.tpe == 6 or enemy.tpe == 7 then
			if (not player.isHoldingKey) then
				animate(enemy,enemy.spr,4,6,false)
			end
		elseif enemy.tpe == 0 or enemy.tpe == 1 then
			animate(enemy,enemy.spr,4,(4+ flr(rnd(2)+1)) - (global.mode * 2),(player.x < enemy.x))
		elseif enemy.tpe == 4 or enemy.tpe == 5 then
			if enemy.direction == 0 then
				animate(enemy,enemy.spr,4,6, false)
			else
				animate(enemy,enemy.spr,4,6, true)
			end
		else
			spr(enemy.spr,enemy.x,enemy.y)
		end
	end
end

__gfx__
00000000002266000222666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020000602000000600000000000000000000000000000000000000000000000000000000000000000000000000200200000000000000000000200200
00700700200260062020060600000000000000000000000000000000000000000000000000000000000000000000000002222220002002000020020002222220
00077000202000062002600600000000000000000000000000000000000000000000000000000000000000000000000002202020022222200222222002202020
00077000202000062002600600000000000000000000000000000000000000000000000000000000000200000000000002222220022020200220202002222220
00700700200260062020060600000000000000000000000000000000000000000000000000000000002002000000000000002020022222200222222000002020
00000000020000602000000600000000000000000000000000000000000000000000000000000000020020200000000000000000000020200000202000000000
00000000002266000222666000000000000000000000000000000000000000000000000000000000200200022002000200000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00200200002002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02222220022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000060600000606000000000000060600
02202020022020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02222220022222200000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000
00002020000020200000000000000000000000000000000000000000000000000000000000000000000000000060060000000000000000000000000000000000
00200000000200000000000000000000000000000000000000000000000000000000000000000000000000000600606000000000000000000000000000000000
00200200000220000000000000000000000000000000000000000000000000000000000000000000600600066006000600000000000000000000000000000000
00066600000666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666660006666600000000000000000000000000000000000000000000000000000000000000000000000000000000000020200000202000000000000020200
00606060006060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666660006666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006600000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00600000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00600600000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000022000222000222220002222200022000000000000000000000000000000000000000000666600000000000000000000666600
00000000000000000000000000000000002222200022222020222220000000000000000000000000000000000000000000000000006666000066660000000000
00000000000000000002200000022000002000200000000002200022000000000000000000000000000000000000000000666600000000000000000000666600
00000000000000000000000000000000002020200000200000202020000000000000000000000000000000000000000006666660006666000066660006666660
00000000000220000002200000022000002020200000200000202020000000000000000000000000000000000000000006606060066666600666666006606060
00000000000000000000000000000000002020200000200002202022000000000000000000000000000000000000000006666660066060600660606006666660
00022000000220000002200000022000002000200000000020200020000000000000000000000000000000000000000006066060066666600666666006066060
00000000000000000000000000000000222222222222222222222222000000000000000000000000000000000000000000000000060660600606606000000000
22222222202000000000002200000000222222222222222200000022202000002020020222222222202002022222222222222222222222222222222222222222
02020202220000000000020200000000220202020202020200000202220000002200002222000022220000222020202020202020202020222020202020202020
20202020202000000000002200000000202020202020202200000022202000002020020220200202202002022202020202020202020202020000000000000000
00000000220000000000020200000000220000000000020200000202220000002200002222000022220000222000000000000000000000020020020000200200
00000000202000000000002200000000202000000000002200000022202000002020020220200202202002022000000000000000000000020200200000020020
00000000220000000000020202020202220000000000020202020202220202022200002222000022220000222202020202020202020202020020020000200200
00000000202000000000002220202020202000000000002220202022202020202020020220200202202002022020202020202020202020220000000000000000
00000000220000000000020222222222220000000000020222222222222222222200002222000022222222222222222222222222222222222222222222222222
66666666606000000000006600000000666666666666666600000066606000006060060666666666606006066666666666666666666666666666666666666666
06060606660000000000060600000000660606060606060600000606660000006600006666000066660000666060606060606060606060666060606060606060
60606060606000000000006600000000606060606060606600000066606000006060060660600606606006066606060606060606060606060000000000000000
00000000660000000000060600000000660000000000060600000606660000006600006666000066660000666000000000000000000000060060060000600600
00000000606000000000006600000000606000000000006600000066606000006060060660600606606006066000000000000000000000060600600000060060
00000000660000000000060606060606660000000000060606060606660606066600006666000066660000666606060606060606060606060060060000600600
00000000606000000000006660606060606000000000006660606066606060606060060660600606606006066060606060606060606060660000000000000000
00000000660000000000060666666666660000000000060666666666666666666600006666000066666666666666666666666666666666666666666666666666
22022022000000002222222220000002000000002220002200000000000000000000000000000000000000000000000000000000000000000000000000000000
20200202020220202000000200000000000000002022222000000000000000000000000000000000000000000000000000000000000000000000000000000000
02000020000000002020000200022000000000000220002200000000000000000000000000000000000000000000000000000000000000000000000000000000
20000002020000202020000220020202000000000020202000000000000000000000000000000000000000000000000000000000000000000000000000000000
20000002020000202020020220222202000000000020202000000000000000000000000000000000000000000000000000000000000000000000000000000000
02000020000000002020000200200200000000000220202200000000000000000000000000000000000000000000000000000000000000000000000000000000
20200202020220202020220200200200020020202020002000000000000000000000000000000000000000000000000000000000000000000000000000000000
22022022000000002020000220022002222222222222222200000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000660660666666666660000006000000006660006600000000000000000000000000000000000000000000000000000000000000000000000000000000
06066060606006066000000600000000000000006066666000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000060000606060000600066000000000000660006600000000000000000000000000000000000000000000000000000000000000000000000000000000
06000060600000066060000660060606000000000060606000000000000000000000000000000000000000000000000000000000000000000000000000000000
06000060600000066060000660666606000600000060606000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000060000606060600600600600006006000660606600000000000000000000000000000000000000000000000000000000000000000000000000000000
06066060606006066060000600600600060060606060006000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000660660666060000660066006600600066666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
00200200002002000020020000200200000000000000000000000000000000000000000000000000000000000000000000222000000000000000000000222000
02200020022000200220002002200020000000000000000000000000000000000000000000000000000000000000000000202000002220000022200000202000
02022220020222200202222002022220000000000000000000000000000000000000000000000000000000000000000000222000002020000020200000222000
00202020002020200020202000202020000000000000000000000000000000000000000000000000000000000000000000020000002220000022200000020000
00222200002222000022220000222200000000000000000000000000000000000000000000000000000000000000000000220000000200000002000000220000
00022000000220000002200000022000000000000000000000000000000000000000000000000000000000000000000000020000002200000022000000020000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000200000002000000220000
00220200000220000020220000022000000000000000000000000000000000000000000000000000000000000000000000000000002200000022000000000000
00600600000000000000000000600600000000000000000000000000000000000000000000000000000000000000000000666000000000000000000000666000
06600060006006000060060006600060000000000000000000000000000000000000000000000000000000000000000000606000006060000000000000606000
06066660066000600660006006066660000000000000000000000000000000000000000000000000000000000000000000666000006660000000000000000000
00606060060666600606666000606060000000000000000000000000000000000000000000000000000000000000000000000000000600000006000000000000
00666600006060600060606000666600000000000000000000000000000000000000000000000000000000000000000000000000000600000066000000000000
00000000006666000066660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000060000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000660000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00022200000000000000000000022200000000000000000000000000000000000000000000000000000000000000000000222000000000000022200000000000
00200020000222000002220000200020000000000000000000000000000000000000000000000000000000000000000000202000002020000020200000202000
02022200002000200020002002022200000000000000000000000000000000000000000000000000000000000000000000222000002220000022200000222000
00202020020222000202220000202020000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000
00222200002020200020202000222200000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000
00000000002222000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066600000666000006660000066600000000000000000000000000000000000000000000000000000000000000000000666000006660000066600000666000
00600060006000600060006000600060000000000000000000000000000000000000000000000000000000000000000000606000006060000060600000606000
06066600060666000606660006066600000000000000000000000000000000000000000000000000000000000000000000666000006660000066600000666000
00606060006060600060606000606060000000000000000000000000000000000000000000000000000000000000000000060000000600000006000000060000
00666600006666000066660000666600000000000000000000000000000000000000000000000000000000000000000000660000006600000066000000660000
00066000000660000006600000066000000000000000000000000000000000000000000000000000000000000000000000060000000600000006000000060000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000660000006600000066000000660000
00660600000660000060660000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101010101010101010101010101010101010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000606060606060606060606060
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000000060606060606060606060606
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000666666666666666666666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000001111000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000001101000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000001111000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000001111000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000000000000000000000000000001001000000000000000000000000000000000000000000000000001010000000000606000000000000000000000000
00000000000000000000000000000000001001000000000000000000000000000000000000000000000000001100000000000066000000000000000000000000
00000000111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000606000000000000000000000000
00000000010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000066000000000000000000000000
00000000101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000606000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000606000000000000000000000000
00000000606060606060606060606060606060606060606060606060606060600000000000000000606060606060606060606066000000000000000000000000
00000000060606060606060606060606060606060606060606060606060606060000000000000000060606060606060606060606000000000000000000000000
00000000666666666666666666666666666666666666666666666666666666660000000000000000666666666666666666666666000000000000000000000000
00000000000000000000000000000000006006000000000000000000000000006000000000000606000000000000000000000000000000000000000000000000
00000000000000000000000000000000006006000000000000000000000000006000000000000066000000000000000000000000000000000000000000000000
00000000000000000000000000000000006666000000000000000000000000006000000000000606000000000000000000000000000000000000000000000000
00000000000000000000000000000000006666000000000000000000000000006000000000000066000000000000000000000000000000000000000000000000
00000000000000000000000000000000006606000000000000000000000000006000000000000606000000000000000000000000000000000000000000000000
00000000000000000000000000000000006666000000000000000000000000006060606060606066000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000006606060606060606000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000006666666666666666000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003030000000000000000000001010101010101010101010101018181010101010101010101010101010181810100000100030100000000000000000000010001000300000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
00000000000000000000000000000000444c4c4c4c4c4c4c4c4c4c4c4c4c4c45444c4c4c40404040404040404c4c4c45444c4c4c4c4c4c4c4c4c4c4c4c4c4c45444c4c4c4c4c4c4c4c4c4c4c4c4c4c45444c4c4c4c4c4c4c4c4c4c4c4c4c4c45444c4c4c4c4c4c4c4c4c4c4c4c4c4c4500000000000000000000000000000000
0000000000000000000000000000000048006000610060006100600000000048480000004743434343434346000000484800000000000000000000000000004848000000000000000000000060000048480000000000000000000000000000484800000000000000004800000000004800000000000000000000000000000000
0000000000000000000000000000000048006100600061006000610061616148480000000000000000000000006200484800000000000000000000000000004848000000000000000000000060000048480000000000000000000000000000484800000000000000004800444c45004800000000000000000000000000000000
0000000000000000000000000000000048004b4c4c4c4c4c4c4d49006162614848604b4c4c4c4c4c4c4c4c40404040484800444e4e4e4e4e4e4e4e4e4e456048480000000000000000000000490000484800610060006100600061004961614848004e4e4e4e6060604800486248004800000000000000000000000000000000
00000000000000000000000000000000480060000000006100004a4b4c4c4d4848004800004800004800004743434348480048000000000000000000004800484800000000000000000000004800004848004f000000000000000000480000484800000000480000004800486148004800000000000000000000000000000000
000000000000000000000000000000004861000000000061000060000000004848614a00004a00004a00006000000048480048004b4f4f4f4f4f4f4561480048484c4f4f4f650000000000004800004848004800000000000000000048606048484f4f4f00480000004800480048004800000000000000000000000000000000
0000000000000000000000000000000048606161614b4c4c4c4c4d00000000484800000000600000610000600000004848004800000000000000004800480048484040404045000000000000480000484800474c4c4c4c4c4c4c4c4c480000484800000000480000004800480048004800000000000000000000000000000000
0000000000000000000000000000000048000000000063000000496100000048480000494b4c4c4c4c4c4c450000004848004a654e4e4e4e4e4d0048604800484843434343464c4c4c4c4c65480000484800000000000000000000004861614848004e4e4e480000004800480048004800000000000000000000000000000000
0000000000000000000000000000000048000000000063000000484b6060604848654c460000000000000048006000484800000000000000000000480048004848000000600061006000610048000048484c4f4f4f4f4f4f4f4f4f00480000484800000000480000004800480048004800000000000000000000000000000000
000000000000000000000000000000004800000000006300000048000000004848000000000000000000004800000048484c4c4f4f4f4f4f4f4f654861480048486161494c4c4c4c4c4c4d004800004848006200000000000000000048606048484f4f4f00480000004800480048004800000000000000000000000000000000
00000000000000000000000000000000480000000044454c4d004800006100484800000000000000000000486100614848000000006000000000004a0048004848000048000000000000000048000048484c4c4e4e4e4e4e4e4e4e4e460000484800000000480000004800480048004800000000000000000000000000000000
0000000000000000000000000000000048000000004142000000480000000048480000004900000000496048000000484800620044404500000000600048004848606048004b4f4f4f4f4f4c480000484800000000000000000000004a61614848004e4e4e4800000048004a0048004800000000000000000000000000000000
0000000000000000000000000000000048000000614142004b4c4a000000604848000061480000006048004800000048484c4c4c0000004e4e4e4e4e4c4800484800004800000000000000004a00004848000000000000000000000000000048480060000047654c654800000048004800000000000000000000000000000000
000000000000000000000000000000004800000000414200000060000000004848000000480000000048614a00000048480000004743460000000000004a00484861614800000000000000000000004848000000000000000000000000000048480060000061000000474c4c654a004800000000000000000000000000000000
0000000000000000000000000000000048000000604100404040450000000048480000604800000000480060000000484800000000600000000000000061004848006248000000000000000000000048480000006100006000006100006161484800600000610000000000000000004800000000000000000000000000000000
00000000000000000000000000000000474c4c4c4c4343434343434c4c4c4c46474c4c4c4c4c4c4c4c4c4c4c4c654c46474c4c4c4c4c4c4f4f4f4f4c4c4c6546474c4c4c654e4e4e4e4e4e4e4e656546474c4c4c654c4c654c4c654c4c656546474c4c4c4c4c4f4f4f4f4f4f4f4f654600000000000000000000000000000000
